version: "3.0"

services:
  nginx:
    restart: always
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot
      - ./persistentdata/static:/var/www/static
      - ./persistentdata/media:/var/www/media

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot


  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./persistentdata/static:/var/www/static
      - ./persistentdata/media:/var/www/media
    restart: always
    depends_on:
      - db


  db:
    image: mysql
    restart: always
    env_file:
      - db.env
    volumes:
       - ./persistentdata/db/mysql:/var/lib/mysql
       - ./my.cnf:/etc/mysql/my.cnf
    ports:
      - '3306:3306'
    command: --default-authentication-plugin=mysql_native_password


  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      - PMA_ARBITRARY=1

  redis:
    image: redis:7.0.5-alpine
    hostname: redis
    restart: always

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./src:/online_store
    env_file:
      - .env
    links:
      - redis
    depends_on:
      - redis
    restart: always

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./src:/online_store
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"
    restart: always